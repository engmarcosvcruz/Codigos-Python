{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOBeR4T/MjO1ugs9K+ohVGs",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/engmarcosvcruz/Codigos-Python/blob/main/Newave\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "OCMI5J5V42WU",
        "outputId": "a446144f-9394-4da5-8205-c90b70cff4e9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting PySDDP==0.0.18\n",
            "  Downloading PySDDP-0.0.18-py3-none-any.whl (138 kB)\n",
            "\u001b[?25l\r\u001b[K     |██▍                             | 10 kB 17.9 MB/s eta 0:00:01\r\u001b[K     |████▊                           | 20 kB 21.0 MB/s eta 0:00:01\r\u001b[K     |███████▏                        | 30 kB 22.4 MB/s eta 0:00:01\r\u001b[K     |█████████▌                      | 40 kB 21.8 MB/s eta 0:00:01\r\u001b[K     |███████████▉                    | 51 kB 8.7 MB/s eta 0:00:01\r\u001b[K     |██████████████▎                 | 61 kB 9.9 MB/s eta 0:00:01\r\u001b[K     |████████████████▋               | 71 kB 11.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 81 kB 12.1 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 92 kB 13.0 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▊        | 102 kB 14.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 112 kB 14.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▌   | 122 kB 14.0 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▉ | 133 kB 14.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 138 kB 14.0 MB/s \n",
            "\u001b[?25hCollecting typing\n",
            "  Downloading typing-3.7.4.3.tar.gz (78 kB)\n",
            "\u001b[?25l\r\u001b[K     |████▏                           | 10 kB 24.3 MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 20 kB 27.3 MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 30 kB 32.0 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 40 kB 34.0 MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 51 kB 34.4 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 61 kB 36.9 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 71 kB 37.8 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 78 kB 5.9 MB/s \n",
            "\u001b[?25hRequirement already satisfied: cvxopt in /usr/local/lib/python3.7/dist-packages (from PySDDP==0.0.18) (1.2.7)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from PySDDP==0.0.18) (3.2.2)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from PySDDP==0.0.18) (1.4.1)\n",
            "Collecting pyswarm\n",
            "  Downloading pyswarm-0.6.tar.gz (4.3 kB)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from PySDDP==0.0.18) (1.3.5)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from PySDDP==0.0.18) (1.21.5)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->PySDDP==0.0.18) (1.3.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->PySDDP==0.0.18) (0.11.0)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->PySDDP==0.0.18) (2.8.2)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->PySDDP==0.0.18) (3.0.7)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib->PySDDP==0.0.18) (1.15.0)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas->PySDDP==0.0.18) (2018.9)\n",
            "Building wheels for collected packages: pyswarm, typing\n",
            "  Building wheel for pyswarm (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for pyswarm: filename=pyswarm-0.6-py3-none-any.whl size=4481 sha256=d15ddd12443e6f7297ed6fd8a8823d1e58add1a2c214686f6c508be947c7ce9b\n",
            "  Stored in directory: /root/.cache/pip/wheels/ac/69/65/926e9c51b9fa99757cb43e8f6b74c5e6bb8b41a038b35c2db1\n",
            "  Building wheel for typing (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for typing: filename=typing-3.7.4.3-py3-none-any.whl size=26325 sha256=4d54bf84df9c84091cc4a901f441b7689543e113e412da5f528c42679b239ef4\n",
            "  Stored in directory: /root/.cache/pip/wheels/35/f3/15/01aa6571f0a72ee6ae7b827c1491c37a1f72d686fd22b43b0e\n",
            "Successfully built pyswarm typing\n",
            "Installing collected packages: typing, pyswarm, PySDDP\n",
            "Successfully installed PySDDP-0.0.18 pyswarm-0.6 typing-3.7.4.3\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "typing"
                ]
              }
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "!pip install PySDDP==0.0.18"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from PySDDP import PowerSystem"
      ],
      "metadata": {
        "id": "VxpzQC6y5VQx"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "casoestudo = PowerSystem.Classroom()"
      ],
      "metadata": {
        "id": "s_H5hnVH5o7Q"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "import os\n",
        "from google.colab import files\n",
        "## Monta o Google drive no colab com o nome gdrive\n",
        "\n",
        "drive.mount('/content/gdrive')\n",
        "## o comando abaixo mostra qual o diretorio vc esta trabalhando no momento\n",
        "print( os.getcwd() )\n",
        "Caminho = 'gdrive/My Drive/newave'"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KGFkVKO151C4",
        "outputId": "bde35073-1410-4382-a637-75022f79d84c"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/gdrive\n",
            "/content\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from PySDDP.Pen import Newave\n",
        "casoestudo = Newave(Caminho)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HUfpnVsH7BWX",
        "outputId": "de98a34e-45ac-4963-b090-f09558f23427"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "OK! Leitura do CASO.DAT realizada com sucesso.\n",
            "OK! Leitura do ARQUIVOS.DAT realizada com sucesso.\n",
            "OK! Leitura do HIDR.DAT realizada com sucesso.\n",
            "OK! Leitura do VAZOES.DAT realizada com sucesso.\n",
            "OK! Leitura do CONFHD.DAT realizada com sucesso.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "uhe = casoestudo.confhd.get('ItaIpu')\n",
        "print (f\"Nome {uhe['nome']} - Volume Minimo: {uhe[\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_j7aslSH8IF3",
        "outputId": "b4e945c9-861f-4840-f279-e7e2e3425304"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Nome ITAIPU       - Volume Minimo: 29403.91015625\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "-6T267_s9V1W"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}